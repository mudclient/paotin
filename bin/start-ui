#!/usr/bin/env bash

MODE=$1

if [ "x$MODE" == "xdaemon" ]; then
    while true; do bash; done
    exit
fi

if [ "x$TMUXCMD" = "x" ]; then
    export TMUXCMD="tmux -L MUD"
fi

SESSION=MUD

# 等待终端状态同步
echo 正在打开终端...
sleep 0.5;

echo 正在连接 UI...

# 优先连接到已有的会话，继续之前的状态
$TMUXCMD attach-session -t $SESSION && exit

echo 正在生成 UI...

HEIGHT=$(tput lines || ( [[ "x$LINES" != "x" ]] && echo $LINES ) || echo 30)
HEIGHT=$(expr $HEIGHT - 1 - 1 - 1 - 6)

# 如果尚未创建会话，则创建一个标准会话
$TMUXCMD new-session -d -s $SESSION
$TMUXCMD new-window     -t $SESSION
$TMUXCMD select-window  -t $SESSION:0
$TMUXCMD split-window   -t $SESSION -vb
$TMUXCMD send-keys      -t $SESSION 'clear; echo "You could input \"mtail id\" to watch your game log."; mtail'
$TMUXCMD send-keys      -t $SESSION Enter
$TMUXCMD last-pane
$TMUXCMD send-keys      -t $SESSION "sleep 0.1; tmux resize-pane -y $HEIGHT; clear; doc HOW-TO-PLAY.md"
$TMUXCMD send-keys      -t $SESSION Enter

# 针对单 ID 挂机用户，可以通过提供 auto 参数在启动 UI 后继续完成 tt 的拉起与角色的登录动作
if [ "x$MODE" == "xauto" ]; then
    $TMUXCMD send-keys      -t $SESSION "start $HOSTNAME"
    $TMUXCMD send-keys      -t $SESSION Enter
fi

echo UI 已创建。

exec $TMUXCMD attach-session -t $SESSION
