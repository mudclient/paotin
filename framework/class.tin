#nop vim: set filetype=tt:;

/*
模块名称：class 功能封装
模块说明：本文件属于框架代码的一部分，不建议修改。如有需求请在 GitHub 发 issue 或者 PR
版权声明：本文件属于 PaoTin++ 的一部分
===========
PaoTin++ © 2020~2023 的所有版权均由担子炮(dzp <danzipao@gmail.com>) 享有并保留一切法律权利
你可以在遵照 GPLv3 协议的基础之上使用、修改及重新分发本程序。
===========
*/

#list xtt-class-stack create {};

#alias {class.name} {
    #local currentClassName {${xtt-class-stack[-1]}};
};

#alias {class.open} {
    #local className {%1};

    #list {xtt-class-stack} {add} {$className};
    #class {$className} open;
};

#alias {class.close} {
    #local className {%1};
    #class {$className} close;

    #list {xtt-class-stack} {delete} {-1};
    #local preClassName {${xtt-class-stack[-1]}};
    #if { "$preClassName" != "" } {
        #class {$preClassName} open;
    };
};

#alias {class.kill} {
    #local className {%1};
    #class {$className} kill;
};

#alias {class.read} {
    #local className {%1};
    #local filePath {%2};

    class.open {$className};
    class.do {$className} {load-file $filePath};
    class.close {$className};
};

#alias {class.do} {
    #local className {%1};
    #local code      {%2};

    #class {$className} {assign} {$code};
};

#alias {class.enable} {
    #local className {%1};
    #class {$className} {load};
};

#alias {class.disable} {
    #local className {%1};
    #class {$className} {save};
    #class {$className} {clear};
};
